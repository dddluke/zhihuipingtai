# Generated by Django 3.1.1 on 2020-09-11 01:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_icon', models.ImageField(upload_to='cicons/%Y%m%d')),
                ('company_name', models.CharField(max_length=32, unique=True)),
                ('company_address', models.CharField(max_length=64, unique=True)),
                ('active', models.IntegerField(default=0)),
                ('context', models.CharField(default='略', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_name', models.CharField(max_length=32)),
                ('d_seriesnumber', models.IntegerField()),
                ('d_tunnel', models.CharField(max_length=32)),
                ('d_status', models.CharField(choices=[(1, '当前在线'), (2, '离线')], max_length=20)),
                ('d_datastatus', models.CharField(choices=[(1, '数据实时上传'), (2, '无数据上传')], max_length=20)),
                ('d_lastcontracttime', models.DateTimeField()),
                ('d_registertime', models.DateTimeField()),
                ('d_c_id', models.ForeignKey(db_column='d_c_id', default=None, on_delete=django.db.models.deletion.CASCADE, to='One.company')),
            ],
        ),
        migrations.CreateModel(
            name='Knowledge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('k_user_id', models.IntegerField()),
                ('k_title', models.CharField(max_length=32)),
                ('k_type', models.CharField(choices=[(1, '知识库'), (2, '行业资讯')], max_length=10)),
                ('k_date', models.DateTimeField()),
                ('k_content', models.CharField(max_length=20000)),
            ],
        ),
        migrations.CreateModel(
            name='LoginUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_numbers', models.CharField(max_length=11, unique=True, verbose_name='手机号')),
                ('u_company_id', models.IntegerField()),
                ('u_icon', models.ImageField(null=True, upload_to='uicons/%Y%m%d')),
                ('u_type', models.CharField(choices=[(1, '公司管理员'), (2, '员工'), (3, '运营'), (4, '运维'), (5, '客服')], max_length=10, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_user_id', models.IntegerField()),
                ('s_title', models.CharField(max_length=32)),
                ('s_type', models.CharField(choices=[(1, '知识库解决方案'), (2, '行业资讯解决方案')], max_length=20)),
                ('s_date', models.DateTimeField()),
                ('s_content', models.CharField(max_length=20000)),
                ('s_k_id', models.ForeignKey(db_column='s_k_id', on_delete=django.db.models.deletion.CASCADE, to='One.knowledge')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(blank=True, null=True, verbose_name='内容')),
                ('unread', models.BooleanField(db_index=True, default=True, verbose_name='是否未读')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receive_messages', to=settings.AUTH_USER_MODEL, verbose_name='接收者')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_message', to=settings.AUTH_USER_MODEL, verbose_name='发送者')),
            ],
        ),
        migrations.CreateModel(
            name='KnowledgeMediaStore',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_k_filepath', models.ImageField(upload_to='kmedia/%Y%m%d')),
                ('m_type', models.CharField(choices=[(1, '图片'), (2, '视频')], max_length=10)),
                ('m_date', models.DateTimeField()),
                ('m_k_id', models.ForeignKey(db_column='m_k_id', default=None, on_delete=django.db.models.deletion.CASCADE, to='One.knowledge')),
            ],
        ),
        migrations.CreateModel(
            name='Devicemaintainrecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dm_d_detail', models.CharField(max_length=2000)),
                ('dm_d_id', models.ForeignKey(db_column='dm_d_id', default=None, on_delete=django.db.models.deletion.CASCADE, to='One.device')),
                ('dm_o_id', models.ForeignKey(db_column='dm_o_id', default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='device',
            name='d_m_id',
            field=models.ForeignKey(db_column='d_m_id', default=None, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Complainrecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cr_detail', models.CharField(max_length=200)),
                ('cr_date', models.DateTimeField()),
                ('cr_type', models.CharField(choices=[(1, '未解决'), (2, '已解决')], max_length=10)),
                ('cr_e_id', models.ForeignKey(blank=True, db_column='cr_e_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reciver', to=settings.AUTH_USER_MODEL)),
                ('cr_u_id', models.ForeignKey(blank=True, db_column='cr_u_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='c_u_id',
            field=models.OneToOneField(db_column='c_u_id', default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cm_detail', models.CharField(max_length=200)),
                ('cm_date', models.DateTimeField()),
                ('cm_type', models.CharField(choices=[(1, '非常满意'), (2, '满意'), (3, '一般'), (4, '不满意'), (5, '非常不满意')], max_length=10)),
                ('cm_e_id', models.ForeignKey(blank=True, db_column='cm_e_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service', to=settings.AUTH_USER_MODEL)),
                ('cm_u_id', models.ForeignKey(blank=True, db_column='cm_u_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
